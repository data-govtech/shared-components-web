name: Release Flow

on:
  workflow_call:
    inputs:
      version_type:
        required: true
        type: string

# on:
#   push:
#     branches: ['main']
#   pull_request:
#     branches: ['develop']

jobs:
  bump-version:
    runs-on: ubuntu-latest
    env:
      VERSION_TYPE: ${{ inputs.version_type }}

    outputs:
      build-version: v${{ steps.build-version.outputs.version }}
      next-version-number: ${{ steps.next-version.outputs.version }}

    steps:
      - uses: actions/checkout@v3
        with:
          ref: develop

      - name: Extract build version from updated package.json
        id: build-version
        uses: Saionaro/extract-package-version@v1.0.6

      - name: Bump next version
        run: npm version --git-tag-version=false ${{ env.VERSION_TYPE }}

      - name: Extract next version from updated package.json
        id: next-version
        uses: Saionaro/extract-package-version@v1.0.6

  build:
    runs-on: ubuntu-latest
    needs: [bump-version]

    steps:
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'

      - name: Install Yarn
        run: npm install -g yarn

      - uses: actions/checkout@v3
        with:
          ref: develop

      - name: Bump version on branch develop for the release
        run: |
          git config user.email "${{ github.event.head_commit.committer.email }}"
          git config user.name "${{ github.event.head_commit.committer.name }}"

          npm version --git-tag-version=false ${{ needs.bump-version.outputs.next-version-number }}
          git add package.json
          git commit -m "Bump version v${{ needs.bump-version.outputs.next-version-number }}"
          git push

      - name: Install dependencies and generate build
        run: |
          yarn install
          yarn build

      - name: Generate build and commit built folder on branch release
        run: |
          cp -R dist temp
          git fetch origin
          git checkout release
          rm -rf dist
          mv temp dist
          git add dist/
          git commit -m "Generate build for release ${{ needs.bump-version.outputs.build-version }}"

      - name: Bump version on branch release
        id: version-commit
        run: |
          npm version --git-tag-version=false ${{ needs.bump-version.outputs.next-version-number }}
          git add package.json
          git commit -m "Bump version v${{ needs.bump-version.outputs.next-version-number }}"
          echo "::set-output name=latest-commit::$(git rev-parse HEAD)"

      - name: Push changes
        run: git push

      - name: Create Release Notes
        uses: fjogeleit/http-request-action@v1
        with:
          url: '${{ github.api_url}}/repos/${{ github.repository }}/releases'
          method: 'POST'
          customHeaders: '{ "Content-Type": "application/json", "Authorization": "token ${{ github.token }}" }'
          data: '{ "tag_name": "${{ needs.bump-version.outputs.next-version-number }}", "name": "Release ${{ needs.bump-version.outputs.next-version-number }}", "target_commitish": "${{ steps.version-commit.outputs.latest-commit }}" }'
